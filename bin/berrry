#!/usr/bin/env node

const { AICoder } = require('../src/main.js');

async function main() {
  const args = process.argv.slice(2);
  
  // Parse command line arguments
  const options = {
    verbose: false,
    prompt: null,
    yolo: process.env.YOLO === 'true'
  };
  
  for (let i = 0; i < args.length; i++) {
    const arg = args[i];
    
    if (arg === '--verbose' || arg === '-v') {
      options.verbose = true;
    } else if (arg === '--prompt' || arg === '-p') {
      options.prompt = args[++i];
    } else if (arg === '--yolo') {
      options.yolo = true;
    } else if (arg === '--help' || arg === '-h') {
      console.log(`
Berrry Committer - AI-powered GitHub automation tool

Usage:
  berrry [options]
  berrry --prompt "Your coding request"

Options:
  -p, --prompt <text>    Direct prompt mode
  -v, --verbose         Show LLM input and output
  --yolo               Skip confirmations
  -h, --help           Show this help

Environment Variables:
  ANTHROPIC_API_KEY     Anthropic API key
  OPENROUTER_API_KEY    OpenRouter API key (alternative)
  MODEL                 LLM model (default: anthropic/claude-sonnet-4)
  COMMIT_MODEL          Model for commits (default: anthropic/claude-3.5-haiku)
  GITHUB_EVENT_PATH     Path to GitHub event JSON
  YOLO                  Skip confirmations (true/false)

Examples:
  berrry --prompt "Create a login component" --verbose
  berrry --yolo
  GITHUB_EVENT_PATH=/tmp/event.json berrry --verbose
`);
      process.exit(0);
    }
  }
  
  try {
    const coder = new AICoder(options);
    await coder.run();
  } catch (error) {
    console.error('Error:', error.message);
    if (options.verbose) {
      console.error('Stack trace:', error.stack);
    }
    process.exit(1);
  }
}

main().catch(console.error);